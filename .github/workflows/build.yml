on:
  push:
    tags:
      - "v*"
jobs:
  package:
    strategy:
      matrix:
        go-version: [1.18]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set Version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Get Wails dependencies
        run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: Build package macOS
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin
          echo "building on ${{ matrix.os }}"
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build
          echo "converting .app into a .dmg"
          npm install -g appdmg
          appdmg dmg-spec.json devimage.dmg
          zip devimage.zip devimage.dmg
        if: matrix.os == 'macos-latest'
      - name: Build package linux
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building on ${{ matrix.os }}"
          echo ${{ env.GITHUB_REF }}
          echo ${{ env.GITHUB_HEAD_REF }}
          mkdir -p ~/.wails
          cp wails.json ~/.wails/
          export LOG_LEVEL=debug
          export GODEBUG=1
          wails build
          tar -czvf devimage.tar.gz ./build/bin/devimage*
        if: matrix.os == 'ubuntu-latest'
      - name: Build package windows
        run: |
          $GP = (go env GOPATH)
          $env:path = "$env:path;$GP\bin"
          echo "building on ${{ matrix.os }}"
          New-Item -ItemType directory -Path "$HOME\.wails" -Force
          Copy-Item -Path "$PWD\wails.json" -Destination "$HOME\.wails\wails.json"
          choco install mingw
          wails build
          Compress-Archive -Path .\build\bin\devimage* -DestinationPath .\devimage.zip
        if: matrix.os == 'windows-latest'
      - name: upload artifact macOS
        uses: actions/upload-artifact@v1
        with:
          name: devimage-macOS
          path: devimage.zip
        if: matrix.os == 'macos-latest'
      - name: upload artifact linux
        uses: actions/upload-artifact@v2-preview
        with:
          name: devimage-linux
          path: devimage.tar.gz
        if: matrix.os == 'ubuntu-latest'
      - name: upload artifact windows
        uses: actions/upload-artifact@v1
        with:
          name: devimage-windows
          path: devimage.zip
        if: matrix.os == 'windows-latest'

  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Download macOS package
        uses: actions/download-artifact@v1
        with:
          name: devimage-macOS
      - name: Download linux package
        uses: actions/download-artifact@v1
        with:
          name: devimage-linux
      - name: Download windows package
        uses: actions/download-artifact@v1
        with:
          name: devimage-windows
      - name: Rename package
        run: |
          mkdir -p devimage-packages
          mv ./devimage-macOS/devimage.zip ./devimage-packages/devimage_${{ steps.get_version.outputs.VERSION }}_macOS.zip
          mv ./devimage-linux/devimage.tar.gz ./devimage-packages/devimage_${{ steps.get_version.outputs.VERSION }}_linux_x86_64.tar.gz
          mv ./devimage-windows/devimage.zip ./devimage-packages/devimage_${{ steps.get_version.outputs.VERSION }}_windows_x86_64.zip
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "./devimage-packages/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}